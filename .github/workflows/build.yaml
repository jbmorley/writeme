name: build

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  schedule:
    - cron:  '0 9 * * *'
  workflow_dispatch:

jobs:

  service-build:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Checkout required submodules
      run: |
        git submodule update --init --depth 1 scripts/build-tools
        git submodule update --init --depth 1 scripts/changes

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.9"

    - name: Install pipenv
      run: |
        python -m pip install --upgrade pipenv wheel

    - name: Install dependencies
      run: scripts/install-dependencies.sh

    - name: Build Debian package
      env:
        BUILD_PACKAGE: true
      run: |
        scripts/build-service.sh

    - name: Purge all Docker images
      run: |
        docker system prune --all --force
        docker image prune --all --force
        docker container ls
        docker image ls

    - name: Archive the Debian package
      uses: actions/upload-artifact@v4
      with:
        name: service
        path: service/build/writeme-service-*.deb
        if-no-files-found: error

    - name: Install and test the package
      run: |
        sudo mkdir -p /usr/share/writeme-service/
        echo "" | sudo tee -a /usr/share/writeme-service/.env
        sudo apt-get install ./service/build/writeme-service-*.deb
        sleep 5
        sudo systemctl status writeme-service.service
        journalctl -u writeme-service.service
        scripts/test-service.sh

  service-deploy-staging:

    needs: service-build
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://${{ vars.SERVICE_ADDRESS }}
    concurrency: staging
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download the build package
      uses: actions/download-artifact@v4
      with:
        name: service

    - name: Deploy the service
      env:
        SERVICE_DEPLOYMENT_GROUP: ${{ vars.SERVICE_DEPLOYMENT_GROUP }}
        SERVICE_ADDRESS: ${{ vars.SERVICE_ADDRESS }}
        ANSIBLE_SSH_KEY: ${{ secrets.ANSIBLE_SSH_KEY }}
        ANSIBLE_BECOME_PASS: ${{ secrets.ANSIBLE_BECOME_PASS }}
      run: |
        service/ansible/deploy.sh writeme-service-*.deb

  service-deploy-production:

    needs: [service-build, service-deploy-staging]
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://${{ vars.SERVICE_ADDRESS }}
    # Ideally we'd enforce concurrency here, but there doesn't seem to be a nice
    # way to combine concurrency and 'manual' deployments triggered by a review.
    # concurrency: production
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download the build package
      uses: actions/download-artifact@v4
      with:
        name: service

    - name: Deploy the service
      env:
        SERVICE_DEPLOYMENT_GROUP: ${{ vars.SERVICE_DEPLOYMENT_GROUP }}
        SERVICE_ADDRESS: ${{ vars.SERVICE_ADDRESS }}
        ANSIBLE_SSH_KEY: ${{ secrets.ANSIBLE_SSH_KEY }}
        ANSIBLE_BECOME_PASS: ${{ secrets.ANSIBLE_BECOME_PASS }}
      run: |
        service/ansible/deploy.sh writeme-service-*.deb
